function cleanOrgName(o){return o?o.replace(/\b(Inc|Ltd|Corp|Corporation|LLC|Limited|Company|Co|Entertainment|Interactive)\.?\b/gi,"").trim():""}function getSimilarityScore(o,n){const e=o.toLowerCase(),r=n.toLowerCase();if(e===r)return 100;let t=0;(e.includes(r)||r.includes(e))&&(t+=50);const i=e.split(/\s+/).filter((o=>o.length>1)),a=r.split(/\s+/).filter((o=>o.length>1));return t+=10*i.filter((o=>a.includes(o))).length,t-=.5*Math.abs(e.length-r.length),Math.max(0,t)}function deriveExpectedDomain(o){let n=cleanOrgName(o).toLowerCase().replace(/\s+/g,"");return n=n.replace(/[^a-z0-9.]/g,""),n.includes(".")||(n+=".com"),n}const APOLLO_API_KEY="RkAYDXn_fooT15v42PkAwg";async function enrichOrganizationByDomain(o){if(!o)return null;const n=`https://api.apollo.io/api/v1/organizations/enrich?api_key=${APOLLO_API_KEY}&domain=${o}`;try{console.log("Apollo API: Enriching organization by domain:",o);const e=await fetch(n,{method:"GET",headers:{"Cache-Control":"no-cache","Content-Type":"application/json"}}),r=await e.json();if(console.log("Apollo API: Org enrichment response:",JSON.stringify(r,null,2)),!e.ok||!r.organization)throw new Error(`HTTP error! status: ${e.status} - ${JSON.stringify(r)}`);const t=r.organization;if(t&&!t.domain&&t.website_url)try{const o=new URL(t.website_url);t.domain=o.hostname,t.domain.startsWith("www.")&&(t.domain=t.domain.substring(4))}catch(o){console.warn("Could not parse domain from website_url for enriched org:",t.name,"URL:",t.website_url,o)}return t}catch(o){return console.error("Error enriching organization by domain:",o),null}}async function searchOrganizationOnApollo(o,n=[],e=[]){const r={q_organization_name:o,page:1,per_page:50};n.length>0&&(r.organization_locations=n),e.length>0&&(r.q_organization_keyword_tags=e);try{console.log("Apollo API: Searching for organization:",o,"Locations:",n,"Keywords:",e);const t=await fetch("https://api.apollo.io/api/v1/mixed_companies/search",{method:"POST",headers:{"Content-Type":"application/json","Cache-Control":"no-cache","X-Api-Key":APOLLO_API_KEY},body:JSON.stringify(r)}),i=await t.json();if(console.log("Apollo API: Full org search response:",JSON.stringify(i,null,2)),!t.ok)throw new Error(`HTTP error! status: ${t.status} - ${JSON.stringify(i)}`);return i.organizations||i.accounts||i.companies||[]}catch(o){return console.error("Error searching organization on Apollo:",o),[]}}async function tryMultipleOrgNames(o,n=[],e=[]){const r=new Set;r.add(o),r.add(cleanOrgName(o));const t=o.split(" ");if(t.length>0&&r.add(t[0]),t.length>2){const n=t.slice(0,t.length-1).join(" ").replace(/(Inc|Ltd|Corp|Corporation|LLC|Limited|Company|Co|Entertainment|Interactive|Canada)\.?/gi,"").trim();n&&n!==o&&r.add(n)}const i=o.replace(/\sCanada\s*(Inc|Ltd|Corp|Corporation|LLC|Limited|Company|Co|Entertainment|Interactive)?\b/gi,"").trim();i&&i!==o&&r.add(i);const a=[];for(const o of Array.from(r)){if(!o)continue;console.log(`Apollo API: Trying organization name query: "${o}"`);const r=await searchOrganizationOnApollo(o,n,e);r&&r.length>0&&a.push(...r)}let s=null,l=-1;const c=o.toLowerCase(),g=deriveExpectedDomain(o);if(g)for(const n of a)if(n.primary_domain&&n.primary_domain.toLowerCase()===g)return console.log(`Found exact domain match for "${o}": "${n.name}" -> "${n.primary_domain}"`),n;for(const o of a){if(!o.name)continue;let n=getSimilarityScore(c,o.name.toLowerCase());o.website_url&&o.primary_domain&&(n+=20),n>l&&(l=n,s=o)}if(s){if(s.website_url)try{const o=new URL(s.website_url);s.domain=o.hostname,s.domain.startsWith("www.")&&(s.domain=s.domain.substring(4)),console.log("Extracted domain from website_url for selected best match org:",s.name,"->",s.domain)}catch(o){console.warn("Could not parse domain from website_url for org:",s.name,"URL:",s.website_url,o)}console.log(`Found best match for "${o}": "${s.name}" with score ${l}`)}else console.warn(`No strong match found for "${o}" among Apollo results.`);return s}async function searchPeopleOnApollo({organization:o,personSeniorities:n=[],personTitles:e=[]}){if(!o?.domain)throw new Error("Organization domain not found");if(!o?.id)throw new Error("Organization ID not found for people search.");const r={q_organization_domains:[o.domain],organization_ids:[o.id],page:1,per_page:50};n.length>0&&!n.includes("intern")&&(r.person_seniorities=n),e.length>0&&(r.person_titles=e,r.include_similar_titles=!0);try{console.log("Apollo API: Searching for people at org domain:",o.domain,"Org ID:",o.id,"Seniorities:",n,"Titles:",e);const t=await fetch("https://api.apollo.io/v1/people/search",{method:"POST",headers:{"Content-Type":"application/json","Cache-Control":"no-cache","X-Api-Key":APOLLO_API_KEY},body:JSON.stringify(r)}),i=await t.json();if(console.log("Apollo API: Full people search response:",JSON.stringify(i,null,2)),!t.ok)throw new Error(`HTTP error! status: ${t.status} - ${JSON.stringify(i)}`);return i.people&&0!==i.people.length?i.people:(console.log("No people found for organization:",o.name),[])}catch(o){return console.error("Error searching people on Apollo:",o),[]}}chrome.runtime.onMessage.addListener(((o,n,e)=>{if("findRelevantConnections"===o.action)return(async()=>{try{const n=o.query.organization_name;console.log("Trying org names:",n);let r=null;const t=deriveExpectedDomain(n);if(t&&(r=await enrichOrganizationByDomain(t),r&&console.log(`Successfully found organization via domain enrichment: ${r.name} -> ${r.domain}`)),r||(console.log("Falling back to name-based organization search."),r=await tryMultipleOrgNames(n,o.query.organization_locations,o.query.q_organization_keyword_tags)),console.log("Organization result:",r),!r)return void e({error:"Organization not found. Please try editing the organization name and scan again."});const i=await searchPeopleOnApollo({organization:r,personSeniorities:o.query.person_seniorities,personTitles:o.query.title});console.log("People result:",i),e({organization:r,people:i})}catch(o){console.error("Error in background script:",o),e({error:o.message})}})(),!0}));